#ifndef __EDID_H
#define __EDID_H

#include "xil_types.h"
#include "xintc.h"			//Interrupt Controller API functions

/*
 * IIC bit definitions
 */
#define bitAasFlag 0x00000020     // Addressed-as-Slave interrupt flag
#define bitNaasFlag 0x00000040     // Not-Addressed-as-Slave interrupt flag
#define bitTxEmptyFlag 0x00000004 // Tx-Empty interrupt flag
#define bitTxDoneFlag 0x00000002  // Tx-Done interrupt flag

/*
 * IIC Register offsets
 */
#define bIicGIE 0x001C   // Global interrupt enable (R/W)
#define bIicISR 0x0020   // Interrupt status register (R/Toggle on W)
#define bIicIER 0x0028   // Interrupt enable register (R/W)
#define bIicCR  0x0100   // Control register (R/W)
#define bIicSR  0x0104   // Status register (R)
#define bIicTX  0x0108   // Transmit FIFO (R/W)
#define bIicRX  0x010C   // Receive FIFO (R)
#define bIicADR 0x0110   // Slave address register (R/W)
#define bIicTXOCY 0x0114 // Transmit FIFO occupancy (R)

/*
 * Only send EDID this many times
 */
#define maxEDIDSends 10000

static const u8 edid[2][128] =
// EDID for 720p HDMI
{{0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x48,0x2A,0xCD,0xAB,0x12,0x34,0x56,0x78,0x00,0x16,0x01,0x03,0x80,0x00,0x00,0x78,0x00,0xE5,0xC5,0xA4,0x56,0x4A,0x9C,0x23,0x12,0x50,0x54,0x00,0x00,0x00,0x81,0xC0,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x1D,0x00,0x72,0x51,0xD0,0x1E,0x20,0x6E,0x28,0x55,0x00,0xE7,0x12,0x11,0x00,0x00,0x1C,0x00,0x00,0x00,0xFD,0x00,0x3C,0x3C,0x1F,0x50,0x0E,0x00,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x00,0x00,0xFC,0x00,0x52,0x75,0x73,0x73,0x65,0x6C,0x6C,0x2D,0x41,0x74,0x6C,0x79,0x73,0x00,0x00,0x00,0xFE,0x00,0x55,0x6F,0x59,0x43,0x53,0x20,0x50,0x72,0x6F,0x6A,0x65,0x63,0x74,0x01,0xBF},{0x02,0x03,0x0C,0x01,0x41,0x84,0x65,0x03,0x0C,0x00,0x00,0x00,0x01,0x1D,0x00,0x72,0x51,0xD0,0x1E,0x20,0x6E,0x28,0x55,0x00,0xE7,0x12,0x11,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xB9}};
// EDID for 1280x720 DVI
//{0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x48,0x2A,0xCD,0xAB,0x12,0x34,0x56,0x78,0x00,0x16,0x01,0x03,0x80,0x00,0x00,0x78,0x00,0xE5,0xC5,0xA4,0x56,0x4A,0x9C,0x23,0x12,0x50,0x54,0x00,0x00,0x00,0x81,0xC0,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x1D,0x00,0x72,0x51,0xD0,0x1E,0x20,0x6E,0x28,0x55,0x00,0xE7,0x12,0x11,0x00,0x00,0x1C,0x00,0x00,0x00,0xFD,0x00,0x3C,0x3C,0x1F,0x50,0x0E,0x00,0x0A,0x20,0x20,0x20,0x20,0x20,0x20,0x00,0x00,0x00,0xFC,0x00,0x52,0x75,0x73,0x73,0x65,0x6C,0x6C,0x2D,0x41,0x74,0x6C,0x79,0x73,0x00,0x00,0x00,0xFE,0x00,0x55,0x6F,0x59,0x43,0x53,0x20,0x50,0x72,0x6F,0x6A,0x65,0x63,0x74,0x00,0xC0};

/* ------------------------------------------------------------ */
/*					Procedure Declarations						*/
/* ------------------------------------------------------------ */

void initEdid(XIntc controller);
void enableEdidInterrupt(void);
void disableEdidInterrupt(void);
void IicHandler(void *CallBackRef);

/* ------------------------------------------------------------ */

#endif
