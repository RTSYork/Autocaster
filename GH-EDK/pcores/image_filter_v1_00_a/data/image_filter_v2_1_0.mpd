###################################################################
##
## Name     : image_filter
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN image_filter

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION IP_GROUP = MICROBLAZE:Guitar Hero Project
OPTION DESC = Image Filter
OPTION LONG_DESC = Applies filters to an image stream
OPTION ARCH_SUPPORT_MAP = (others=DEVELOPMENT)

IO_INTERFACE IO_IF = video_in_0, IO_TYPE = AXI_STREAM_DVI
IO_INTERFACE IO_IF = video_out_0, IO_TYPE = AXI_STREAM_DVI

## Bus Interfaces
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = S_AXIS_S2MM, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = M_AXIS_S2MM, BUS_STD = AXIS, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_MIN_SIZE = 0x000001ff, DT = std_logic_vector, BUS = S_AXI
PARAMETER C_USE_WSTRB = 0, DT = INTEGER
PARAMETER C_DPHASE_TIMEOUT = 8, DT = INTEGER
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, MIN_SIZE = 0x200, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_NUM_REG = 1, DT = INTEGER
PARAMETER C_NUM_MEM = 1, DT = INTEGER
PARAMETER C_SLV_AWIDTH = 32, DT = INTEGER
PARAMETER C_SLV_DWIDTH = 32, DT = INTEGER
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, DT = STRING, BUS = S_AXI
PARAMETER C_S_AXIS_S2MM_PROTOCOL = XIL_AXI_STREAM_VID_DATA, DT = STRING, BUS = S_AXIS_S2MM, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_M_AXIS_S2MM_PROTOCOL = XIL_AXI_STREAM_VID_DATA, DT = STRING, BUS = M_AXIS_S2MM, ASSIGNMENT = CONSTANT, TYPE = NON_HDL

###################################################################
## Global Ports
###################################################################
PORT ACLK = "", DIR = I, INITIALVAL = VCC, SIGIS = CLK

#PORT HDMI_IN_PCLK = "", DIR = O
#PORT HDMI_IN_HSYNC = "", DIR = O
#PORT HDMI_IN_VSYNC = "", DIR = O
PORT RGB_OUT = "", DIR = O, VEC = [23:0]
#PORT HDMI_IN_VDE = "", DIR = O

###################################################################
## VDMA Ports
###################################################################
PORT S_AXIS_S2MM_ACLK = ACLK, DIR = O, BUS = S_AXIS_S2MM, SIGIS = CLK
PORT S_AXIS_S2MM_ARESETN = ARESETN, DIR = I, BUS = S_AXI:S_AXIS_S2MM, SIGIS = RST
PORT S_AXIS_S2MM_TREADY = TREADY, DIR = O, BUS = S_AXIS_S2MM
PORT S_AXIS_S2MM_TDATA = TDATA, DIR = I, VEC = [31:0], BUS = S_AXIS_S2MM, ENDIAN = LITTLE, INITIALVAL = GND
PORT S_AXIS_S2MM_TKEEP = TKEEP, DIR = I, VEC = [3:0], BUS = S_AXIS_S2MM, ENDIAN = LITTLE, INITIALVAL = GND
PORT S_AXIS_S2MM_TLAST = TLAST, DIR = I, BUS = S_AXIS_S2MM, INITIALVAL = GND
PORT S_AXIS_S2MM_TVALID = TVALID, DIR = I, BUS = S_AXIS_S2MM, INITIALVAL = GND

PORT M_AXIS_S2MM_ACLK = ACLK, DIR = O, BUS = M_AXIS_S2MM, SIGIS = CLK
PORT M_AXIS_S2MM_ARESETN = ARESETN, DIR = I, BUS = S_AXI:M_AXIS_S2MM, SIGIS = RST
PORT M_AXIS_S2MM_TVALID = TVALID, DIR = O, BUS = M_AXIS_S2MM
PORT M_AXIS_S2MM_TDATA = TDATA, DIR = O, VEC = [31:0], BUS = M_AXIS_S2MM, ENDIAN = LITTLE
PORT M_AXIS_S2MM_TKEEP = TKEEP, DIR = O, VEC = [3:0], BUS = M_AXIS_S2MM, ENDIAN = LITTLE
PORT M_AXIS_S2MM_TLAST = TLAST, DIR = O, BUS = M_AXIS_S2MM
PORT M_AXIS_S2MM_TREADY = TREADY, DIR = I, BUS = M_AXIS_S2MM, INITIALVAL = GND

## AXI-Lite Ports
PORT S_AXI_ACLK = ACLK, DIR = I, SIGIS = CLK, BUS = S_AXI
PORT S_AXI_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI
PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI

END
